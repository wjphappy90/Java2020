server:
  port: 7000

spring:
  application:
    name: platform-zuul
  redis:
    host: 127.0.0.1
    port: 6379
    password: 123456
    database: 0
  datasource:
    druid:
      url: jdbc:mysql://127.0.0.1:3306/test?characterEncoding=utf8&useSSL=false
      username: root
      password: root
      driverClassName: com.mysql.jdbc.Driver
      initialSize: 2
      minIdle: 2
      maxActive: 10
      maxWait: 3000
      timeBetweenEvictionRunsMillis: 60000
      minEvictableIdleTimeMillis: 300000
      poolPreparedStatements: true
      maxOpenPreparedStatements: 100
      validationQuery: SELECT 1
      validationQueryTimeout: 5
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      filters: stat,wall

#zuul超时设置和路由规则设置
zuul:
  host:
    connect-timeout-millis: 10000
    socket-timeout-millis: 60000
  routes:
    platform-order:               #自定义名称和policies名称对应即可
      path: /orderservice/**
      serviceId: platform-order
#服务限流
  ratelimit:
    enabled: true
    repository: REDIS         #使用redis存储，一定要大写
    policies:
      platform-order:         #针对platform-order服务限流
       limit: 10              #每秒多少个请求（次数）
        #quota: 1               #每个请求的时间限制（秒）
       refreshInterval: 60     #测试客户端如果60秒内请求超过10次，服务端就抛出429异常（秒）
       type:
         - ORIGIN             #可选 限流方式: url通过请求路径区分  origin通过客户端IP地址区分  user是通过登录用户名进行区分，也包括匿名用户

eureka:
  instance:
    ip-address: ${spring.cloud.client.ip-address}
    hostname: ${eureka.instance.ip-address}
    instanceId: ${eureka.instance.ip-address}:${server.port}
    prefer-ip-address: true
  client:
    serviceUrl:
      defaultZone: ${eureka.client.serviceUrl.defaultZone}

logging:
  level:
    com.itcast: debug

# 配置全局的超时时间
ribbon:
  ReadTimeout: 60000
  ConnectTimeout: 60000

# hystrix全局超时时间配置
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 60000
